<UserControl x:Class="GreenBill.MVVM.View.Signup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GreenBill.MVVM.View"
             xmlns:helpers="clr-namespace:GreenBill.Helpers"
             xmlns:components="clr-namespace:GreenBill.Components"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1400"
             Background="#F5F5F5">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="1" 
            Background="White"
            CornerRadius="16"
            Padding="40"
            Width="500"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <Border.Effect>
                <DropShadowEffect Color="Gray" 
                            Opacity="0.1" 
                            ShadowDepth="4" 
                            BlurRadius="16"/>
            </Border.Effect>

            <StackPanel>
                <Image Source="/Assets/Images/logo.png"
                  Width="100"
                  Height="86"
                  HorizontalAlignment="Center"
                  Margin="0,0,0,0"
                  Stretch="Uniform"/>

                <TextBlock Text="Sign up"
                      FontSize="32"
                      FontWeight="SemiBold"
                      Foreground="#2C2C2C"
                      HorizontalAlignment="Left"
                      Margin="0,0,0,24"/>

                <StackPanel Margin="0,0,0,24">
                    <Grid>
                        <TextBox Name="EmailTextBox"
                            Text="{Binding Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Height="50"
                            Padding="16,12"
                            FontSize="16"
                            BorderBrush="#E0E0E0"
                            BorderThickness="1"
                            Background="White"
                            Foreground="#2C2C2C"/>

                        <TextBlock Text="Email Address"
                                  Foreground="#999"
                                  VerticalAlignment="Center"
                                  Margin="18,0"
                                  IsHitTestVisible="False">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=EmailTextBox}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <Grid x:Name="LoadingOverlay" 
                         Background="Transparent" 
                         Visibility="Collapsed"
                         Grid.RowSpan="3"
                         HorizontalAlignment="Center" 
                         VerticalAlignment="Center"
                         Panel.ZIndex="99">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,10">
                                    <Ellipse Width="30" Height="30" Fill="#2E7D32" Margin="5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform Y="0"/>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                           From="0" To="-15" Duration="0:0:0.3" 
                                                              AutoReverse="True" BeginTime="0:0:0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Ellipse.Triggers>
                                     </Ellipse>
                                    <Ellipse Width="30" Height="30" Fill="#2E7D32" Margin="5">
                                  <Ellipse.RenderTransform>
                                <TranslateTransform Y="0"/>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                     From="0" To="-15" Duration="0:0:0.3" 
                     AutoReverse="True" BeginTime="0:0:0.1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Ellipse.Triggers>
                                    </Ellipse>

                                    <Ellipse Width="30" Height="30" Fill="#2E7D32" Margin="5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform Y="0"/>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                     From="0" To="-15" Duration="0:0:0.3" 
                     AutoReverse="True" BeginTime="0:0:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Ellipse.Triggers>
                                    </Ellipse>

                                    <Ellipse Width="30" Height="30" Fill="#2E7D32" Margin="5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform Y="0"/>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                      From="0" To="-15" Duration="0:0:0.3" 
                      AutoReverse="True" BeginTime="0:0:0.3"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Ellipse.Triggers>
                                    </Ellipse>

                                    <Ellipse Width="30" Height="30" Fill="#2E7D32" Margin="5">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform Y="0"/>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                       From="0" To="-15" Duration="0:0:0.3" 
                       AutoReverse="True" BeginTime="0:0:0.4"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Ellipse.Triggers>
                                    </Ellipse>

                                </StackPanel>

                            </StackPanel>
                        </Grid>
                    </Grid>

                    <TextBlock Name="EmailValidation"
                                Text="{Binding EmailError, Mode=TwoWay}"
                          FontSize="14"
                          Foreground="Red"
                          Margin="0,4,0,0"/>
                </StackPanel>

                <StackPanel Margin="0,0,0,24">
                    <Grid>
                        <TextBox Name="UsernameTextBox"
                            Height="50"
                            Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Padding="16,12"
                            FontSize="16"
                            BorderBrush="#E0E0E0"
                            BorderThickness="1"
                            Background="White"
                            Foreground="#2C2C2C"/>

                        <TextBlock Text="Username"
                                  Foreground="#999"
                                  VerticalAlignment="Center"
                                  Margin="18,0"
                                  IsHitTestVisible="False">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=UsernameTextBox}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <TextBlock Name="UsernameValidation"
                          Text="{Binding UsernameError, Mode=TwoWay}"
                          FontSize="14"
                          Foreground="Red"
                          Margin="0,4,0,0"/>
                </StackPanel>

                <StackPanel Margin="0,0,0,24">
                    <Grid>
                        <PasswordBox Name="PasswordBox"
                                    helpers:PasswordBoxHelper.BoundPassword="{Binding Password, Mode=TwoWay}"
                                    helpers:PasswordBoxHelper.BindPassword="True"
                                    PasswordChanged="PasswordBox_PasswordChanged"
                                    Height="50"
                                    Padding="16,12"
                                    FontSize="16"
                                    BorderBrush="#E0E0E0"
                                    BorderThickness="1"
                                    Background="White"
                                    Foreground="#2C2C2C"/>

                        <TextBox Name="PasswordTextBox"
                                Text=""
                                TextChanged="PasswordTextBox_TextChanged"
                                Height="50"
                                Padding="16,12"
                                FontSize="16"
                                BorderBrush="#E0E0E0"
                                BorderThickness="1"
                                Background="White"
                                Foreground="#2C2C2C"
                                Visibility="Collapsed"/>

                        <TextBlock Name="PasswordPlaceholder"
                                  Text="Password"
                                  Foreground="#999"
                                  VerticalAlignment="Center"
                                  Margin="18,0,50,0"
                                  IsHitTestVisible="False"/>

                        <Button Name="ShowPasswordButton"
                           Width="24"
                           Height="24"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="0,0,16,0"
                           Background="Transparent"
                           BorderThickness="0"
                           Cursor="Hand"
                           Click="ShowPasswordButton_Click">
                            <Path Name="EyeIcon"
                                 Data="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z"
                                 Fill="#999"
                                 Stretch="Uniform"
                                 Width="16"
                                 Height="16"/>
                        </Button>
                    </Grid>

                    <TextBlock Name="PasswordValidation"
                               Text="{Binding PasswordError, Mode=TwoWay}"
                          FontSize="14"
                          Foreground="Red"
                          Margin="0,4,0,0"/>
                </StackPanel>

                <TextBlock FontSize="14"
                      Foreground="#666"
                      TextWrapping="Wrap"
                      LineHeight="20"
                      Margin="0,8,0,0">
                <Run Text="By clicking the Sign up button below, you agree to the GoFundMe "/>
                <Hyperlink Foreground="#00A651" TextDecorations="Underline">
                    <Run Text="Terms of Service"/>
                </Hyperlink>
                <Run Text=" and acknowledge the "/>
                <Hyperlink Foreground="#00A651" TextDecorations="Underline">
                    <Run Text="Privacy Notice"/>
                </Hyperlink>
                <Run Text="."/>
                </TextBlock>

                <Button Name="SignUpButton"
                   Tag="{Binding IsLoading}"
                   Style="{StaticResource PrimaryButton}"
                   Content="Sign up"
                   Height="50"
                   Command="{Binding CreateAccount}"
                   FontSize="16"
                   FontWeight="SemiBold"
                   Margin="0,16,0,0" Click="SignUpButton_Click"/>

                <Button Name="BackButton"
                   Content="Back"
                   Command="{Binding NavigateToHome}"
                   Background="Transparent"
                   BorderThickness="0"
                   FontSize="16"
                   Foreground="#666"
                   HorizontalAlignment="Left"
                   Padding="0"
                   Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <TextBlock Text="{TemplateBinding Content}"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontSize="{TemplateBinding FontSize}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#333"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </StackPanel>
        </Border>


        <components:SuccessToast Grid.RowSpan="3"
                         IsVisible="{Binding ShowSuccessMessage, Converter={StaticResource BooleanToVisibilityConverter}}"
                         Title="Account Created!"
                         CloseCommand="{Binding CloseToast}"
                         Message="Your account has been successfully created."/>

        <components:LoadingOverlay Grid.RowSpan="3"
                                   IsVisible="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   LoadingText="Creating account..."/>
    </Grid>
</UserControl>